Stuff to Demo:
	Alex:
		X - add class instance field
		X - add relationship
		X - remove class/interface package
		X - remove class/interface
		X - remove relationship
		X - list design
		X - list class/interface
		- change class/interface name
		- change class/interface package
		- change class modifiers
		- change class field
		- change class method
	
	Brandon:
		X - create design 			
		X - create class/interface
		X - add class/interface package
		X - add class/interface instance method
		X - add class/interface static method
		X - export as JSON
		X - import as JSON
		- import as Source -> Doesn't work
		- show help
	
	Rob:
		- All the command parsing stuff
		- remove class/interface instance method
		- remove class/interface static method
		- export as XML
		- export as Source
		- import as XML
		- cache variable
		- chache method
		- chache modifier set
		- list cached variable
		- list cached method
		- list cached modifier set

Command orders:
	Alex:
		create design -name Name
		
		create class -name Class1
		list class -object default.Class
		
		create class -name Class2
		list design -> see both of these classes.
		
		add relation -sup default.Class1 -sub default.Class2 -t extends -> new relationship
		list design -> see that the new relationship was added! Cool stuff!
		
		remove relation -sup default.Class1 -sub default.Class2
		list design -> see that the new relationship is now removed forever.
		
		remove class -object default.Class1
		list design -> notice that it is only Class2 at this point
		list class -object default.Class1 -> notice that the Object is not found in the design.
		
		create interface -name Interface
		list design -->>> there's a new interface in there now.
		list interface -object default.Interface
		
		remove interface -object default.Interface
		list design --> No more interface :(
		
		add field -object default.Class2 -name counterVariable -t int -mod public,static
		list design --> there is a new instance field!
		
		

	Brandon:
		create design -name Name
		
		create class -name Class1
		list class -object default.Class1 -> Can see there was a new empty class created
		
		create interface -name Interf1
		list interface -object default.Interf1 -> Can see there was a new interface created
		
		add pkg -object default.Class1 -name edu.iastate
		list class -object edu.iastate.Class1 -> Notice how we need to update the package

		add method -object edu.iastate.Class1 -name Method1 -modifiers public -return void -args int:a,int:b
		add method -object default.Interf1 -name Method2 -modifiers public,static -return void -args int:a,int:b

		export json -path out.json - Look at the output json file

		import json -path out.json
		list design -> Notice how the full design was loaded in

	Rob:
		create design -name MyDesign
		create class -name Class1
		export xml -path out.xml
		import xml -path out.xml
		list design
		add pkg -object default.Class1 -name edu.iastate
		create class -name MyFirstClass
		create interface -name Interf1
		add method -object edu.iastate.Class1 -name Method1 -modifiers public -return void -args int:a,int:b
		export xml -path out2.xml
		remove method -object edu.iastate.Class1 -name Method1
		export xml -path out2.xml
		create cache -type method -name MyMethod -return void
		list cache -id 0 -type method  -> assuming 0 is the id of the previous add
		
		
